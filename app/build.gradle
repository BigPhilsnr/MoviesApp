plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

def getProperty(String filename, String propName) {
    def propsFile = rootProject.file(filename)
    if (propsFile.exists()) {
        def props = new Properties()
        props.load(new FileInputStream(propsFile))
        if (props[propName] != null) {
            return props[propName]
        } else {
            print("No such property " + propName + " in file " + filename)
        }
    } else {
        print(filename + " does not exist!")
    }
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.philipademba.takehome"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName "1.0"
        buildConfigField "String", "TMDB_API_KEY", "\"${getProperty("local.properties", "tmdb_api_key")}\""
        testInstrumentationRunner "com.philipademba.takehome.HiltTestRunner"
        vectorDrawables {
            useSupportLibrary true
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation": "$projectDir/schemas1".toString()]
            }
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments["dagger.hilt.disableModulesHaveInstallInCheck"] = "true"
            }
        }
    }

    buildTypes {

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion compose_compiler
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

    sourceSets {
        test.assets.srcDirs += files("$projectDir/schemas".toString())
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    namespace 'com.philipademba.takehome'

}

dependencies {

    //Hilt + Dagger
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    implementation 'androidx.test:runner:1.4.0'
    kapt "com.google.dagger:hilt-compiler:$daggerHiltVersion"
    kapt "androidx.hilt:hilt-compiler:1.0.0"

    // Hilt + JetPack
    implementation "androidx.hilt:hilt-work:$jetpackHiltVersion"
    kapt "androidx.hilt:hilt-compiler:$jetpackHiltVersion"
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'
    androidTestImplementation "com.google.dagger:hilt-android-testing:$jetpackHiltTestVersion1"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$jetpackHiltTestVersion"


    //navigation compose
    implementation "androidx.navigation:navigation-compose:$nav_version"
    implementation "com.google.accompanist:accompanist-navigation-animation:0.16.0"

    //retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofit"
    implementation "com.google.code.gson:gson:$gson"
    implementation "com.squareup.okhttp3:okhttp:4.9.3"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_gson"
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    //Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.6.4'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.6.4"

    //  Lifecycle Components
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"

    //material icons
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    //coil
    implementation("io.coil-kt:coil-compose:2.2.2")
    //swipe to refresh
    implementation "com.google.accompanist:accompanist-swiperefresh:0.24.9-beta"


    //constraint layout compose
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'

    //used to prevent flag_immutable crash
    implementation 'androidx.work:work-runtime-ktx:2.7.1'

    //open maps
    implementation 'org.osmdroid:osmdroid-android:6.1.2'
    implementation 'com.github.MKergall:osmbonuspack:6.4'

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.5.1'
    implementation 'androidx.activity:activity-compose:1.6.0'
    implementation "androidx.compose.ui:ui:$compose_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    implementation 'androidx.compose.material:material:1.2.1'

    //debug
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"

    //default test libs
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"

    implementation "junit:junit:4.13.2"

    //room version
    implementation "androidx.room:room-runtime:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    //paging
    implementation "androidx.paging:paging-runtime:$paging_version"
    implementation "androidx.paging:paging-guava:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha16"

    //datastore
    implementation "androidx.datastore:datastore-preferences:$dataStoreVersion"

    //permissions
    implementation "com.google.accompanist:accompanist-permissions:0.21.1-beta"


    //testing
    androidTestImplementation "junit:junit:4.13.2"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    androidTestImplementation "com.google.truth:truth:1.1.3"
    androidTestImplementation 'androidx.test:core-ktx:1.4.0'
    androidTestImplementation "io.mockk:mockk-android:1.12.4"
    androidTestImplementation 'com.google.dagger:hilt-android-testing:2.42'
    kaptAndroidTest 'com.google.dagger:hilt-android-compiler:2.42'

    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:runner:1.4.0'
    testImplementation 'androidx.test:rules:1.4.0'
    testImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    testImplementation 'androidx.test.ext:junit:1.1.3'
    testImplementation 'org.robolectric:robolectric:4.9'
    testImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.4"
    testImplementation "com.google.truth:truth:1.1.3"
    testImplementation "com.squareup.okhttp3:mockwebserver:4.9.3"
    testImplementation "io.mockk:mockk:1.12.4"
    debugImplementation "androidx.compose.ui:ui-test-manifest:1.3.0-beta03"
    testImplementation 'org.robolectric:robolectric:4.7.3'
    testImplementation 'androidx.compose.ui:ui-test-junit4:1.0.5'
    debugImplementation 'androidx.compose.ui:ui-test-manifest:1.0.5'

}